---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Hanzo.
--- DateTime: 8/4/2025 2:35 PM
---

local WANDER_RADIUS = 20
local WANDER_COOLDOWN = 5.0

-- Stores last time each passive mob decided to wander
local wanderCooldowns = {}

Entity.on {
    type = "PassiveMob",
    updateAI = function(mob)
        local id = mob:getID()
        local currentTime = os.clock()

        -- Initialize cooldown if not present
        if not wanderCooldowns[id] then
            wanderCooldowns[id] = 0
        end

        -- Respect wander cooldown
        if currentTime - wanderCooldowns[id] < WANDER_COOLDOWN then
            return
        end

        wanderCooldowns[id] = currentTime

        local pos = mob:getPosition()

        -- Pick a random point within radius
        local dx = math.random(-WANDER_RADIUS, WANDER_RADIUS)
        local dz = math.random(-WANDER_RADIUS, WANDER_RADIUS)

        local targetPos = {
            x = pos.x + dx,
            y = pos.y,
            z = pos.z + dz
        }

        mob:findPathAsync(pos, targetPos, function(path)
            if path and #path > 0 then
                local jList = luajava.newInstance("java.util.ArrayList")
                for _, vec in ipairs(path) do
                    if vec and vec.x and vec.y and vec.z then
                        local javaVec = luajava.new(Vector3f, vec.x, vec.y, vec.z)
                        jList:add(javaVec)
                    end
                end
                mob:setPath(jList)
            end
        end)
    end,

    tickAI = function(mob)
        local currentPath = mobPaths[mob:getID()]
        if not currentPath or not currentPath.path then return end

        local step = currentPath.stepIndex
        local path = currentPath.path
        local nextPos = path[step]
        local currentPos = mob:getPosition()

        if nextPos then
            local nextPosVec = luajava.new(Vector3f, nextPos.x, nextPos.y, nextPos.z)
            if distance(currentPos, nextPosVec) >= 0.05 then
                mob:moveTowards(nextPosVec)
            end

            if distance(currentPos, nextPos) < 0.1 then
                currentPath.stepIndex = step + 1
                if currentPath.stepIndex > #path then
                    mobPaths[mob:getID()] = nil
                end
            end
        end
    end,

    onDeath = function(mob)
        local id = mob:getID()
        mobPaths[id] = nil
        pathCooldowns[id] = nil
        print("☠️ Mob " .. tostring(id) .. " died. Cleaned up paths.")
    end
}