plugins {
    id 'java'
}

group = 'adventuregame.net.chidozie.adventuregame'
version = '0.0.1'
project.ext.lwjglVersion = "3.3.5"
project.ext.lwjglNatives = "natives-windows"

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    maven { url "https://libraries.minecraft.net" }
    maven { url "https://hub.spigotmc.org/stash/releases" }
    maven { url "https://maven.mojang.com" }
    maven { url 'https://jitpack.io' }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
        }
    }
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-openvr"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-vulkan"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openvr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = 'exclude'
    manifest {
        attributes(
                'Main-Class': 'adventuregame.net.chidozie.adventuregame.AdventureGame'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task runGame(type: JavaExec) {
    main = 'adventuregame.net.chidozie.adventuregame.AdventureGame'
    classpath = sourceSets.main.runtimeClasspath
    // Optional: Set JVM args if needed
    jvmArgs = ['-Xms512m', '-Xmx1024m']

}
tasks.withType(org.gradle.api.tasks.Copy) {
    duplicatesStrategy = 'exclude'
}
